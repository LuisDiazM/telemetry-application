// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cmd

import (
	"github.com/LuisDiazM/backend/telemetry-gateway/app"
	"github.com/LuisDiazM/backend/telemetry-gateway/domain/devices/usecases"
	"github.com/LuisDiazM/backend/telemetry-gateway/infraestructure/cache"
	devices2 "github.com/LuisDiazM/backend/telemetry-gateway/infraestructure/cache/repositories/devices"
	"github.com/LuisDiazM/backend/telemetry-gateway/infraestructure/database"
	"github.com/LuisDiazM/backend/telemetry-gateway/infraestructure/database/repositories/devices"
	"github.com/LuisDiazM/backend/telemetry-gateway/infraestructure/messaging"
)

// Injectors from wire.go:

func CreateApp() *app.Application {
	hiveMQSettings := app.GetHiveMQSettings()
	messagingBroker := messaging.NewMessagingBroker(hiveMQSettings)
	appSettings := app.GetAppSettings()
	mongoSettings := app.GetMongoSettings()
	mongoImplementation := database.NewMongoImplementation(mongoSettings)
	iDbRepository := devices.NewDevicesDbRepository(mongoImplementation)
	redisSettings := app.GetCacheSettings()
	redisImp := cache.NewRedisImp(redisSettings)
	iDeviceCacheRepo := devices2.NewCacheDeviceRepository(redisImp)
	deviceUsecase := usecases.NewDeviceUsecase(iDbRepository, iDeviceCacheRepo)
	application := app.NewApplication(messagingBroker, appSettings, deviceUsecase)
	return application
}
